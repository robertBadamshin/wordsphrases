apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: '../getKeys.gradle'
apply from: '../commonDaggerModule.gradle'
apply from: '../commonMoxyModule.gradle'
apply from: '../commonRetrofitModule.gradle'
apply from: '../commonRoomModule.gradle'
apply from: '../commonUiModule.gradle'
apply from: '../commonBase.gradle'


android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.app.wordsphrases"

        versionCode 5
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias project.ext.keystoreProperties['keyAlias']
            keyPassword project.ext.keystoreProperties['keyPassword']
            storeFile file(project.ext.keystoreProperties['storeFile'])
            storePassword project.ext.keystoreProperties['storePassword']
        }
    }

    buildTypes {

        release {

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
    }
}

dependencies {

    implementation project(':core')
    implementation project(':core-ui')
    implementation project(':navigation')
    implementation project(':add-word-impl')
    implementation project(':add-word-api')
    implementation project(':home-impl')
    implementation project(':home-api')
    implementation project(':remote-api')
    implementation project(':remote-impl')
    implementation project(':translation-impl')
    implementation project(':translation-api')
    implementation project(':stories-impl')
    implementation project(':stories-api')
    implementation project(':popup-translator-impl')
    implementation project(':email-sender-impl')
    implementation project(':email-sender-api')
    implementation project(':entity')
}
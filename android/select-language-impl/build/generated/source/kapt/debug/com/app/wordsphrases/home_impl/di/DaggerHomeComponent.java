// Generated by Dagger (https://dagger.dev).
package com.app.wordsphrases.home_impl.di;

import com.app.wordsphrases.core.AppComponent;
import com.app.wordsphrases.home_impl.presentation.HomePresenter;
import dagger.internal.DaggerGenerated;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerHomeComponent {
  private DaggerHomeComponent() {
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private AppComponent appComponent;

    private Builder() {
    }

    public Builder appComponent(AppComponent appComponent) {
      this.appComponent = Preconditions.checkNotNull(appComponent);
      return this;
    }

    public HomeComponent build() {
      Preconditions.checkBuilderRequirement(appComponent, AppComponent.class);
      return new HomeComponentImpl(appComponent);
    }
  }

  private static final class HomeComponentImpl implements HomeComponent {
    private final AppComponent appComponent;

    private final HomeComponentImpl homeComponentImpl = this;

    private HomeComponentImpl(AppComponent appComponentParam) {
      this.appComponent = appComponentParam;

    }

    @Override
    public HomePresenter getHomePresenter() {
      return new HomePresenter(Preconditions.checkNotNullFromComponent(appComponent.getStoriesStarter()), Preconditions.checkNotNullFromComponent(appComponent.getRouter()));
    }
  }
}

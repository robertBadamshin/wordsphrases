// Generated by Dagger (https://dagger.dev).
package com.app.wordsphrases.home_impl.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import ru.terrakok.cicerone.Cicerone;
import ru.terrakok.cicerone.Router;

@ScopeMetadata("com.app.wordsphrases.core.di.AppScope")
@QualifierMetadata("com.app.wordsphrases.home_api.HomeNavigationQualifier")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeApiModule_CiceroneFactory implements Factory<Cicerone<Router>> {
  private final HomeApiModule module;

  public HomeApiModule_CiceroneFactory(HomeApiModule module) {
    this.module = module;
  }

  @Override
  public Cicerone<Router> get() {
    return cicerone(module);
  }

  public static HomeApiModule_CiceroneFactory create(HomeApiModule module) {
    return new HomeApiModule_CiceroneFactory(module);
  }

  public static Cicerone<Router> cicerone(HomeApiModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.cicerone());
  }
}

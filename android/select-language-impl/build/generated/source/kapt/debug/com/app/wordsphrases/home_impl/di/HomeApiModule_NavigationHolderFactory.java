// Generated by Dagger (https://dagger.dev).
package com.app.wordsphrases.home_impl.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import ru.terrakok.cicerone.Cicerone;
import ru.terrakok.cicerone.NavigatorHolder;
import ru.terrakok.cicerone.Router;

@ScopeMetadata
@QualifierMetadata("com.app.wordsphrases.home_api.HomeNavigationQualifier")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeApiModule_NavigationHolderFactory implements Factory<NavigatorHolder> {
  private final HomeApiModule module;

  private final Provider<Cicerone<Router>> ciceroneProvider;

  public HomeApiModule_NavigationHolderFactory(HomeApiModule module,
      Provider<Cicerone<Router>> ciceroneProvider) {
    this.module = module;
    this.ciceroneProvider = ciceroneProvider;
  }

  @Override
  public NavigatorHolder get() {
    return navigationHolder(module, ciceroneProvider.get());
  }

  public static HomeApiModule_NavigationHolderFactory create(HomeApiModule module,
      Provider<Cicerone<Router>> ciceroneProvider) {
    return new HomeApiModule_NavigationHolderFactory(module, ciceroneProvider);
  }

  public static NavigatorHolder navigationHolder(HomeApiModule instance,
      Cicerone<Router> cicerone) {
    return Preconditions.checkNotNullFromProvides(instance.navigationHolder(cicerone));
  }
}

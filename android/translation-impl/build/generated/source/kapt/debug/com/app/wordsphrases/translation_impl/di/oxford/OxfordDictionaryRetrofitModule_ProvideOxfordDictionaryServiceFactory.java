// Generated by Dagger (https://dagger.dev).
package com.app.wordsphrases.translation_impl.di.oxford;

import com.app.wordsphrases.translation_impl.data.datasource.service.OxfordDictionaryService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata("com.app.wordsphrases.core.di.AppScope")
@QualifierMetadata("com.app.wordsphrases.translation_impl.di.oxford.OxfordRetrofitQualifier")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OxfordDictionaryRetrofitModule_ProvideOxfordDictionaryServiceFactory implements Factory<OxfordDictionaryService> {
  private final OxfordDictionaryRetrofitModule module;

  private final Provider<Retrofit> retrofitProvider;

  public OxfordDictionaryRetrofitModule_ProvideOxfordDictionaryServiceFactory(
      OxfordDictionaryRetrofitModule module, Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public OxfordDictionaryService get() {
    return provideOxfordDictionaryService(module, retrofitProvider.get());
  }

  public static OxfordDictionaryRetrofitModule_ProvideOxfordDictionaryServiceFactory create(
      OxfordDictionaryRetrofitModule module, Provider<Retrofit> retrofitProvider) {
    return new OxfordDictionaryRetrofitModule_ProvideOxfordDictionaryServiceFactory(module, retrofitProvider);
  }

  public static OxfordDictionaryService provideOxfordDictionaryService(
      OxfordDictionaryRetrofitModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.provideOxfordDictionaryService(retrofit));
  }
}

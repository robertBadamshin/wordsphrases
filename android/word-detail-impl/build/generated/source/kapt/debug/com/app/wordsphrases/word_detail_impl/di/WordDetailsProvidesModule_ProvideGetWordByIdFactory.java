// Generated by Dagger (https://dagger.dev).
package com.app.wordsphrases.word_detail_impl.di;

import com.wordphrases.domain.usecase.word.GetWordById;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WordDetailsProvidesModule_ProvideGetWordByIdFactory implements Factory<GetWordById> {
  private final WordDetailsProvidesModule module;

  public WordDetailsProvidesModule_ProvideGetWordByIdFactory(WordDetailsProvidesModule module) {
    this.module = module;
  }

  @Override
  public GetWordById get() {
    return provideGetWordById(module);
  }

  public static WordDetailsProvidesModule_ProvideGetWordByIdFactory create(
      WordDetailsProvidesModule module) {
    return new WordDetailsProvidesModule_ProvideGetWordByIdFactory(module);
  }

  public static GetWordById provideGetWordById(WordDetailsProvidesModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideGetWordById());
  }
}
